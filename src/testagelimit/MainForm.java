/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package testagelimit;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Данный класс содержит форму запуска теста
 * @author Dark Hells
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Создается форма
     */
    public MainForm() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Определение возрастного ограничения");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/testagelimit/source/icon1.jpg"))); // NOI18N

        jButton1.setText("Запустить");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Выход");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jButton1)
                        .addGap(51, 51, 51)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * Создается OpenDialog для открытия файла с вопросами
 * @param evt игнорирутеся 
 */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser open = new JFileChooser();
        open.setAcceptAllFileFilterUsed(false);
        open.addChoosableFileFilter(new FileNameExtensionFilter("AL Files","al"));
        if ( open.showOpenDialog(null) == JFileChooser.APPROVE_OPTION ) {
            FileTest.getFile(open.getSelectedFile());
            try {
                Form.loadFile();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            Form.main();
            this.setVisible(false);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
/**
 * Выход из программы
 * @param evt игнорируется
 */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed
    
    /**
     * Тест, по результатом которого должно быть уведомление с результатом 0+
     * @throws FileNotFoundException
     * @throws IOException 
     */
    protected static void test1() throws FileNotFoundException, IOException{
        //открываем тестовый файл test.al
        File  file = new File("test.al"); 
        //загружаем файл для разбора
        FileTest.getFile(file);
        Vector vector = FileTest.parseFile();
        //загружаем файл в класс формы
        Form.loadFile();
        //отвечаем на 1-й вопрос "Да"
        Form.setAns(0, true);
        //завершаем тестирование
        Form.endTest();       
    }
    /**
     * Тест, по результатом которого должно быть уведомление с результатом 18+
     * @throws FileNotFoundException
     * @throws IOException 
     */
     protected static void test2() throws FileNotFoundException, IOException{
        //открываем тестовый файл test.al
        File  file = new File("test.al"); 
        //загружаем файл для разбора
        FileTest.getFile(file);
        Vector vector = FileTest.parseFile();
        //загружаем файл в класс формы
        Form.loadFile();
        //отвечаем на 5-й вопрос "Да"
        Form.setAns(4, true);
        //завершаем тестирование
        Form.endTest();         
    }
    /**
     * Тест, по результатам которого должно быть уведомлене с результатом 12+
     * @throws FileNotFoundException
     * @throws IOException 
     */
      protected static void test3() throws FileNotFoundException, IOException{
         //открываем тестовый файл test.al
        File  file = new File("test.al"); 
        //загружаем файл для разбора
        FileTest.getFile(file);
        Vector vector = FileTest.parseFile();
        //загружаем файл в класс формы
        Form.loadFile();
        //отвечаем на 3-й вопрос "Да"
        Form.setAns(2, true);
        //завершаем тестирование
        Form.endTest();          
    }
    
    
    /**
     * Главный метод вызова формы
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        if ("test".equals(args[0])){
            JOptionPane.showMessageDialog(null, "Вы запустили программу в режиме тестирования. Сейчас выполнятся несколько сценариев, после которых вы получите результаты", "Уведомление", 1);
            try {
                test1();
                test2();
                test3();
                System.exit(0);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
